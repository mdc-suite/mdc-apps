// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="line_buffer_19,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=1,HLS_SYN_FF=345,HLS_SYN_LUT=1058}" *)

module line_buffer_19 (
        ap_clk,
        ap_rst_n,
        input_V_V_dout,
        input_V_V_empty_n,
        input_V_V_read,
        output_V_V_din,
        output_V_V_full_n,
        output_V_V_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_pp0_stage0 = 9'd16;
parameter    ap_ST_fsm_state7 = 9'd32;
parameter    ap_ST_fsm_state8 = 9'd64;
parameter    ap_ST_fsm_pp1_stage0 = 9'd128;
parameter    ap_ST_fsm_state12 = 9'd256;

input   ap_clk;
input   ap_rst_n;
input  [15:0] input_V_V_dout;
input   input_V_V_empty_n;
output   input_V_V_read;
output  [15:0] output_V_V_din;
input   output_V_V_full_n;
output   output_V_V_write;

reg input_V_V_read;
reg output_V_V_write;

reg    ap_rst_n_inv;
reg    input_V_V_blk_n;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg   [0:0] out_of_bounds_reg_920;
reg    output_V_V_blk_n;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [4:0] pin_reg_344;
reg   [9:0] phi_mul1_reg_355;
reg   [0:0] exitcond_flatten3_reg_427;
reg   [0:0] exitcond4_reg_439;
reg   [5:0] pkern_reg_450;
reg   [1:0] wkern_reg_461;
reg   [7:0] indvar_flatten1_reg_472;
reg   [8:0] indvar_flatten2_reg_483;
reg   [1:0] hkern_reg_494;
wire   [4:0] tmp_1_fu_505_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] next_mul_fu_511_p2;
wire   [15:0] win_133_cast_fu_523_p1;
wire    ap_CS_fsm_state3;
wire   [4:0] hout_mid2_fu_533_p3;
reg   [4:0] hout_mid2_reg_889;
wire   [15:0] tmp_4_cast_fu_547_p1;
reg   [15:0] tmp_4_cast_reg_894;
wire   [8:0] indvar_flatten_next1_fu_551_p2;
reg   [8:0] indvar_flatten_next1_reg_900;
wire   [14:0] tmp_2_fu_557_p1;
wire    ap_CS_fsm_state4;
wire   [4:0] wout_mid_fu_561_p3;
reg   [4:0] wout_mid_reg_910;
wire   [0:0] or_cond_fu_596_p2;
reg   [0:0] or_cond_reg_916;
wire   [0:0] out_of_bounds_fu_638_p2;
wire   [4:0] pin_1_fu_648_p2;
reg   [4:0] pin_1_reg_924;
reg    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] next_mul1_fu_654_p2;
reg   [9:0] next_mul1_reg_934;
wire   [63:0] tmp_23_cast_fu_670_p1;
reg   [63:0] tmp_23_cast_reg_939;
reg   [9:0] buffer_val_1_V_addr_reg_944;
reg   [9:0] buffer_val_2_V_addr_reg_950;
wire   [0:0] exitcond3_fu_676_p2;
reg   [0:0] exitcond3_reg_956;
wire   [0:0] tmp_12_fu_682_p2;
wire    ap_CS_fsm_state7;
wire   [15:0] hin_fu_688_p2;
wire   [0:0] tmp_15_fu_695_p2;
wire   [15:0] win_fu_700_p2;
wire   [5:0] pkern_mid2_fu_738_p3;
reg   [5:0] pkern_mid2_reg_978;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
reg    ap_block_state11_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [1:0] wkern_mid2_fu_746_p3;
reg   [1:0] wkern_mid2_reg_983;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] pkern_1_fu_754_p2;
reg   [5:0] pkern_1_reg_989;
wire   [7:0] indvar_flatten_next_fu_766_p3;
reg   [7:0] indvar_flatten_next_reg_994;
wire   [8:0] indvar_flatten_next2_fu_774_p2;
reg   [8:0] indvar_flatten_next2_reg_999;
wire   [0:0] exitcond_fu_780_p2;
reg   [0:0] exitcond_reg_1004;
wire   [0:0] exitcond_flatten_fu_786_p2;
reg   [0:0] exitcond_flatten_reg_1009;
wire   [0:0] exitcond_flatten2_fu_792_p2;
reg   [0:0] exitcond_flatten2_reg_1014;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten2_reg_1014;
wire   [1:0] hkern_mid2_fu_804_p3;
reg   [1:0] hkern_mid2_reg_1018;
reg    ap_enable_reg_pp1_iter1;
wire   [4:0] wout_1_fu_845_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond2_fu_850_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg   [9:0] buffer_val_0_V_address0;
reg    buffer_val_0_V_ce0;
reg    buffer_val_0_V_we0;
wire   [15:0] buffer_val_0_V_q0;
reg   [9:0] buffer_val_1_V_address0;
reg    buffer_val_1_V_ce0;
wire   [15:0] buffer_val_1_V_q0;
reg    buffer_val_1_V_ce1;
reg    buffer_val_1_V_we1;
reg   [9:0] buffer_val_2_V_address0;
reg    buffer_val_2_V_ce0;
wire   [15:0] buffer_val_2_V_q0;
reg    buffer_val_2_V_ce1;
reg    buffer_val_2_V_we1;
reg   [4:0] tmp_reg_231;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_3_fu_517_p2;
reg   [9:0] phi_mul_reg_242;
reg   [0:0] exitcond1_reg_253;
wire   [0:0] exitcond_flatten1_fu_856_p2;
reg   [14:0] win_4_reg_390;
reg   [14:0] win_s_reg_265;
reg   [15:0] hin_4_reg_378;
reg   [15:0] hin_s_reg_276;
reg   [4:0] wout_reg_288;
reg   [4:0] hout_reg_300;
reg   [8:0] indvar_flatten_reg_311;
reg   [15:0] hin_2_reg_323;
wire    ap_CS_fsm_state8;
reg   [15:0] win_2_reg_334;
reg   [4:0] ap_phi_mux_pin_phi_fu_348_p4;
reg   [9:0] ap_phi_mux_phi_mul1_phi_fu_359_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_tmp_13_reg_366;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_13_reg_366;
reg   [15:0] hin_3_reg_402;
reg   [15:0] win_3_reg_414;
reg   [0:0] ap_phi_mux_exitcond_flatten3_phi_fu_431_p4;
reg   [0:0] ap_phi_mux_exitcond4_phi_fu_443_p4;
reg   [5:0] ap_phi_mux_pkern_phi_fu_454_p4;
reg   [1:0] ap_phi_mux_wkern_phi_fu_465_p4;
reg   [7:0] ap_phi_mux_indvar_flatten1_phi_fu_476_p4;
reg   [8:0] ap_phi_mux_indvar_flatten2_phi_fu_487_p4;
reg   [1:0] ap_phi_mux_hkern_phi_fu_498_p4;
wire  signed [63:0] tmp_26_cast_fu_827_p1;
wire   [15:0] out_val_V_fu_833_p5;
reg    ap_block_pp1_stage0_01001;
wire   [4:0] hout_1_fu_527_p2;
wire   [4:0] tmp_4_fu_541_p2;
wire   [4:0] tmp_7_fu_569_p2;
wire   [15:0] tmp_7_cast_fu_575_p1;
wire   [0:0] slt_fu_579_p2;
wire   [0:0] rev_fu_585_p2;
wire   [0:0] tmp_5_fu_591_p2;
wire   [0:0] tmp_6_fu_602_p2;
wire   [0:0] tmp_9_fu_608_p2;
wire   [0:0] tmp_8_fu_614_p2;
wire   [0:0] tmp_10_fu_620_p2;
wire   [0:0] tmp2_fu_632_p2;
wire   [0:0] tmp1_fu_626_p2;
wire   [10:0] phi_mul35_cast_fu_644_p1;
wire   [10:0] tmp_14_fu_660_p1;
wire   [10:0] tmp_16_fu_664_p2;
wire   [0:0] not_exitcond_flatten_fu_714_p2;
wire   [1:0] wkern_mid_fu_706_p3;
wire   [0:0] exitcond_mid_fu_720_p2;
wire   [0:0] tmp_17_fu_732_p2;
wire   [1:0] wkern_1_fu_726_p2;
wire   [7:0] indvar_flatten_op_fu_760_p2;
wire   [1:0] hkern_1_fu_798_p2;
wire   [4:0] tmp_27_cast_fu_815_p1;
wire   [4:0] col_assign_fu_818_p2;
wire   [10:0] grp_fu_862_p3;
wire   [5:0] grp_fu_862_p0;
wire   [5:0] grp_fu_862_p1;
wire   [4:0] grp_fu_862_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [10:0] grp_fu_862_p00;
wire   [10:0] grp_fu_862_p20;
reg    ap_condition_120;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

line_buffer_19_bubkb #(
    .DataWidth( 16 ),
    .AddressRange( 736 ),
    .AddressWidth( 10 ))
buffer_val_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_val_0_V_address0),
    .ce0(buffer_val_0_V_ce0),
    .we0(buffer_val_0_V_we0),
    .d0(buffer_val_1_V_q0),
    .q0(buffer_val_0_V_q0)
);

line_buffer_19_bucud #(
    .DataWidth( 16 ),
    .AddressRange( 736 ),
    .AddressWidth( 10 ))
buffer_val_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_val_1_V_address0),
    .ce0(buffer_val_1_V_ce0),
    .q0(buffer_val_1_V_q0),
    .address1(buffer_val_1_V_addr_reg_944),
    .ce1(buffer_val_1_V_ce1),
    .we1(buffer_val_1_V_we1),
    .d1(buffer_val_2_V_q0)
);

line_buffer_19_bucud #(
    .DataWidth( 16 ),
    .AddressRange( 736 ),
    .AddressWidth( 10 ))
buffer_val_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_val_2_V_address0),
    .ce0(buffer_val_2_V_ce0),
    .q0(buffer_val_2_V_q0),
    .address1(buffer_val_2_V_addr_reg_950),
    .ce1(buffer_val_2_V_ce1),
    .we1(buffer_val_2_V_we1),
    .d1(ap_phi_reg_pp0_iter1_tmp_13_reg_366)
);

line_buffer_19_mueOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
line_buffer_19_mueOg_U1(
    .din0(buffer_val_0_V_q0),
    .din1(buffer_val_1_V_q0),
    .din2(buffer_val_2_V_q0),
    .din3(hkern_mid2_reg_1018),
    .dout(out_val_V_fu_833_p5)
);

line_buffer_19_mafYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
line_buffer_19_mafYi_U2(
    .din0(grp_fu_862_p0),
    .din1(grp_fu_862_p1),
    .din2(grp_fu_862_p2),
    .dout(grp_fu_862_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond3_fu_676_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten2_fu_792_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_120)) begin
        if ((out_of_bounds_reg_920 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmp_13_reg_366 <= 16'd0;
        end else if ((out_of_bounds_reg_920 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_tmp_13_reg_366 <= input_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_13_reg_366 <= ap_phi_reg_pp0_iter0_tmp_13_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        exitcond1_reg_253 <= 1'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        exitcond1_reg_253 <= exitcond2_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond4_reg_439 <= exitcond_reg_1004;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        exitcond4_reg_439 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_flatten3_reg_427 <= exitcond_flatten_reg_1009;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        exitcond_flatten3_reg_427 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        hin_2_reg_323 <= hin_s_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hin_2_reg_323 <= hin_3_reg_402;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_reg_916 == 1'd1))) begin
        if (((tmp_15_fu_695_p2 == 1'd0) & (tmp_12_fu_682_p2 == 1'd0))) begin
            hin_3_reg_402 <= hin_fu_688_p2;
        end else if ((tmp_12_fu_682_p2 == 1'd1)) begin
            hin_3_reg_402 <= hin_2_reg_323;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        hin_4_reg_378 <= hin_2_reg_323;
    end else if (((tmp_12_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (tmp_15_fu_695_p2 == 1'd1) & (or_cond_reg_916 == 1'd1))) begin
        hin_4_reg_378 <= hin_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        hin_s_reg_276 <= 16'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        hin_s_reg_276 <= hin_4_reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp1_iter1_exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        hkern_reg_494 <= hkern_mid2_reg_1018;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        hkern_reg_494 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        hout_reg_300 <= 5'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        hout_reg_300 <= hout_mid2_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten1_reg_472 <= indvar_flatten_next_reg_994;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        indvar_flatten1_reg_472 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten2_reg_483 <= indvar_flatten_next2_reg_999;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        indvar_flatten2_reg_483 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        indvar_flatten_reg_311 <= 9'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten_reg_311 <= indvar_flatten_next1_reg_900;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_956 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phi_mul1_reg_355 <= next_mul1_reg_934;
    end else if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
        phi_mul1_reg_355 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_242 <= next_mul_fu_511_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        phi_mul_reg_242 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_956 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pin_reg_344 <= pin_1_reg_924;
    end else if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
        pin_reg_344 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        pkern_reg_450 <= pkern_1_reg_989;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        pkern_reg_450 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_231 <= tmp_1_fu_505_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_reg_231 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        win_2_reg_334 <= win_133_cast_fu_523_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        win_2_reg_334 <= win_3_reg_414;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (or_cond_reg_916 == 1'd1))) begin
        if (((tmp_15_fu_695_p2 == 1'd0) & (tmp_12_fu_682_p2 == 1'd0))) begin
            win_3_reg_414 <= 16'd0;
        end else if ((tmp_12_fu_682_p2 == 1'd1)) begin
            win_3_reg_414 <= win_fu_700_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        win_4_reg_390 <= tmp_2_fu_557_p1;
    end else if (((tmp_12_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (tmp_15_fu_695_p2 == 1'd1) & (or_cond_reg_916 == 1'd1))) begin
        win_4_reg_390 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        win_s_reg_265 <= 15'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        win_s_reg_265 <= win_4_reg_390;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wkern_reg_461 <= wkern_mid2_reg_983;
    end else if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
        wkern_reg_461 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
        wout_reg_288 <= 5'd0;
    end else if (((exitcond_flatten1_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        wout_reg_288 <= wout_1_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_reg_pp1_iter1_exitcond_flatten2_reg_1014 <= exitcond_flatten2_reg_1014;
        exitcond_flatten2_reg_1014 <= exitcond_flatten2_fu_792_p2;
        pkern_mid2_reg_978 <= pkern_mid2_fu_738_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_1_V_addr_reg_944 <= tmp_23_cast_fu_670_p1;
        buffer_val_2_V_addr_reg_950 <= tmp_23_cast_fu_670_p1;
        exitcond3_reg_956 <= exitcond3_fu_676_p2;
        tmp_23_cast_reg_939[10 : 0] <= tmp_23_cast_fu_670_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_flatten_reg_1009 <= exitcond_flatten_fu_786_p2;
        exitcond_reg_1004 <= exitcond_fu_780_p2;
        indvar_flatten_next2_reg_999 <= indvar_flatten_next2_fu_774_p2;
        indvar_flatten_next_reg_994 <= indvar_flatten_next_fu_766_p3;
        pkern_1_reg_989 <= pkern_1_fu_754_p2;
        wkern_mid2_reg_983 <= wkern_mid2_fu_746_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        hkern_mid2_reg_1018 <= hkern_mid2_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        hout_mid2_reg_889 <= hout_mid2_fu_533_p3;
        indvar_flatten_next1_reg_900 <= indvar_flatten_next1_fu_551_p2;
        tmp_4_cast_reg_894[4 : 0] <= tmp_4_cast_fu_547_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        next_mul1_reg_934 <= next_mul1_fu_654_p2;
        pin_1_reg_924 <= pin_1_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        or_cond_reg_916 <= or_cond_fu_596_p2;
        wout_mid_reg_910 <= wout_mid_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
        out_of_bounds_reg_920 <= out_of_bounds_fu_638_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_exitcond4_phi_fu_443_p4 = exitcond_reg_1004;
    end else begin
        ap_phi_mux_exitcond4_phi_fu_443_p4 = exitcond4_reg_439;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_exitcond_flatten3_phi_fu_431_p4 = exitcond_flatten_reg_1009;
    end else begin
        ap_phi_mux_exitcond_flatten3_phi_fu_431_p4 = exitcond_flatten3_reg_427;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter1_exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_hkern_phi_fu_498_p4 = hkern_mid2_reg_1018;
    end else begin
        ap_phi_mux_hkern_phi_fu_498_p4 = hkern_reg_494;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_476_p4 = indvar_flatten_next_reg_994;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_476_p4 = indvar_flatten1_reg_472;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten2_phi_fu_487_p4 = indvar_flatten_next2_reg_999;
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_487_p4 = indvar_flatten2_reg_483;
    end
end

always @ (*) begin
    if (((exitcond3_reg_956 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_phi_mul1_phi_fu_359_p4 = next_mul1_reg_934;
    end else begin
        ap_phi_mux_phi_mul1_phi_fu_359_p4 = phi_mul1_reg_355;
    end
end

always @ (*) begin
    if (((exitcond3_reg_956 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_pin_phi_fu_348_p4 = pin_1_reg_924;
    end else begin
        ap_phi_mux_pin_phi_fu_348_p4 = pin_reg_344;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_pkern_phi_fu_454_p4 = pkern_1_reg_989;
    end else begin
        ap_phi_mux_pkern_phi_fu_454_p4 = pkern_reg_450;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten2_reg_1014 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_wkern_phi_fu_465_p4 = wkern_mid2_reg_983;
    end else begin
        ap_phi_mux_wkern_phi_fu_465_p4 = wkern_reg_461;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_val_0_V_address0 = tmp_26_cast_fu_827_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buffer_val_0_V_address0 = tmp_23_cast_reg_939;
    end else begin
        buffer_val_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buffer_val_0_V_ce0 = 1'b1;
    end else begin
        buffer_val_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_0_V_we0 = 1'b1;
    end else begin
        buffer_val_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_val_1_V_address0 = tmp_26_cast_fu_827_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer_val_1_V_address0 = tmp_23_cast_fu_670_p1;
    end else begin
        buffer_val_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buffer_val_1_V_ce0 = 1'b1;
    end else begin
        buffer_val_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_1_V_ce1 = 1'b1;
    end else begin
        buffer_val_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_1_V_we1 = 1'b1;
    end else begin
        buffer_val_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_val_2_V_address0 = tmp_26_cast_fu_827_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer_val_2_V_address0 = tmp_23_cast_fu_670_p1;
    end else begin
        buffer_val_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buffer_val_2_V_ce0 = 1'b1;
    end else begin
        buffer_val_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_2_V_ce1 = 1'b1;
    end else begin
        buffer_val_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_val_2_V_we1 = 1'b1;
    end else begin
        buffer_val_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((out_of_bounds_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_V_V_blk_n = input_V_V_empty_n;
    end else begin
        input_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_of_bounds_reg_920 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_V_V_read = 1'b1;
    end else begin
        input_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        output_V_V_blk_n = output_V_V_full_n;
    end else begin
        output_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_V_V_write = 1'b1;
    end else begin
        output_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_517_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_596_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((or_cond_reg_916 == 1'd0) | ((tmp_12_fu_682_p2 == 1'd0) & (tmp_15_fu_695_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (exitcond_flatten1_fu_856_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((out_of_bounds_reg_920 == 1'd0) & (input_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((out_of_bounds_reg_920 == 1'd0) & (input_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((output_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((output_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((output_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter2 = (output_V_V_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter0 = ((out_of_bounds_reg_920 == 1'd0) & (input_V_V_empty_n == 1'b0));
end

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_120 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_13_reg_366 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign col_assign_fu_818_p2 = (tmp_27_cast_fu_815_p1 + wout_mid_reg_910);

assign exitcond2_fu_850_p2 = ((wout_1_fu_845_p2 == 5'd21) ? 1'b1 : 1'b0);

assign exitcond3_fu_676_p2 = ((ap_phi_mux_pin_phi_fu_348_p4 == 5'd31) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_856_p2 = ((indvar_flatten_reg_311 == 9'd440) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_792_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_487_p4 == 9'd287) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_786_p2 = ((indvar_flatten_next_fu_766_p3 == 8'd96) ? 1'b1 : 1'b0);

assign exitcond_fu_780_p2 = ((pkern_1_fu_754_p2 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_720_p2 = (not_exitcond_flatten_fu_714_p2 & ap_phi_mux_exitcond4_phi_fu_443_p4);

assign grp_fu_862_p0 = grp_fu_862_p00;

assign grp_fu_862_p00 = pkern_mid2_reg_978;

assign grp_fu_862_p1 = 11'd23;

assign grp_fu_862_p2 = grp_fu_862_p20;

assign grp_fu_862_p20 = col_assign_fu_818_p2;

assign hin_fu_688_p2 = (hin_2_reg_323 + 16'd1);

assign hkern_1_fu_798_p2 = (ap_phi_mux_hkern_phi_fu_498_p4 + 2'd1);

assign hkern_mid2_fu_804_p3 = ((exitcond_flatten3_reg_427[0:0] === 1'b1) ? hkern_1_fu_798_p2 : ap_phi_mux_hkern_phi_fu_498_p4);

assign hout_1_fu_527_p2 = (hout_reg_300 + 5'd1);

assign hout_mid2_fu_533_p3 = ((exitcond1_reg_253[0:0] === 1'b1) ? hout_1_fu_527_p2 : hout_reg_300);

assign indvar_flatten_next1_fu_551_p2 = (indvar_flatten_reg_311 + 9'd1);

assign indvar_flatten_next2_fu_774_p2 = (ap_phi_mux_indvar_flatten2_phi_fu_487_p4 + 9'd1);

assign indvar_flatten_next_fu_766_p3 = ((ap_phi_mux_exitcond_flatten3_phi_fu_431_p4[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_760_p2);

assign indvar_flatten_op_fu_760_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_476_p4 + 8'd1);

assign next_mul1_fu_654_p2 = (10'd23 + ap_phi_mux_phi_mul1_phi_fu_359_p4);

assign next_mul_fu_511_p2 = (phi_mul_reg_242 + 10'd23);

assign not_exitcond_flatten_fu_714_p2 = (ap_phi_mux_exitcond_flatten3_phi_fu_431_p4 ^ 1'd1);

assign or_cond_fu_596_p2 = (tmp_5_fu_591_p2 | rev_fu_585_p2);

assign out_of_bounds_fu_638_p2 = (tmp2_fu_632_p2 | tmp1_fu_626_p2);

assign output_V_V_din = out_val_V_fu_833_p5;

assign phi_mul35_cast_fu_644_p1 = ap_phi_mux_phi_mul1_phi_fu_359_p4;

assign pin_1_fu_648_p2 = (ap_phi_mux_pin_phi_fu_348_p4 + 5'd1);

assign pkern_1_fu_754_p2 = (pkern_mid2_fu_738_p3 + 6'd1);

assign pkern_mid2_fu_738_p3 = ((tmp_17_fu_732_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_pkern_phi_fu_454_p4);

assign rev_fu_585_p2 = (slt_fu_579_p2 ^ 1'd1);

assign slt_fu_579_p2 = (($signed(tmp_7_cast_fu_575_p1) < $signed(win_2_reg_334)) ? 1'b1 : 1'b0);

assign tmp1_fu_626_p2 = (tmp_9_fu_608_p2 | tmp_6_fu_602_p2);

assign tmp2_fu_632_p2 = (tmp_8_fu_614_p2 | tmp_10_fu_620_p2);

assign tmp_10_fu_620_p2 = (($signed(win_2_reg_334) > $signed(16'd21)) ? 1'b1 : 1'b0);

assign tmp_12_fu_682_p2 = (($signed(win_2_reg_334) < $signed(16'd22)) ? 1'b1 : 1'b0);

assign tmp_14_fu_660_p1 = win_2_reg_334[10:0];

assign tmp_15_fu_695_p2 = (($signed(hin_fu_688_p2) > $signed(tmp_4_cast_reg_894)) ? 1'b1 : 1'b0);

assign tmp_16_fu_664_p2 = (phi_mul35_cast_fu_644_p1 + tmp_14_fu_660_p1);

assign tmp_17_fu_732_p2 = (exitcond_mid_fu_720_p2 | ap_phi_mux_exitcond_flatten3_phi_fu_431_p4);

assign tmp_1_fu_505_p2 = (tmp_reg_231 + 5'd1);

assign tmp_23_cast_fu_670_p1 = tmp_16_fu_664_p2;

assign tmp_26_cast_fu_827_p1 = $signed(grp_fu_862_p3);

assign tmp_27_cast_fu_815_p1 = wkern_mid2_reg_983;

assign tmp_2_fu_557_p1 = win_2_reg_334[14:0];

assign tmp_3_fu_517_p2 = ((tmp_reg_231 == 5'd31) ? 1'b1 : 1'b0);

assign tmp_4_cast_fu_547_p1 = tmp_4_fu_541_p2;

assign tmp_4_fu_541_p2 = (hout_mid2_fu_533_p3 + 5'd2);

assign tmp_5_fu_591_p2 = (($signed(hin_2_reg_323) < $signed(tmp_4_cast_reg_894)) ? 1'b1 : 1'b0);

assign tmp_6_fu_602_p2 = (($signed(hin_2_reg_323) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign tmp_7_cast_fu_575_p1 = tmp_7_fu_569_p2;

assign tmp_7_fu_569_p2 = (5'd2 + wout_mid_fu_561_p3);

assign tmp_8_fu_614_p2 = (($signed(win_2_reg_334) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign tmp_9_fu_608_p2 = (($signed(hin_2_reg_323) > $signed(16'd21)) ? 1'b1 : 1'b0);

assign win_133_cast_fu_523_p1 = win_s_reg_265;

assign win_fu_700_p2 = (win_2_reg_334 + 16'd1);

assign wkern_1_fu_726_p2 = (wkern_mid_fu_706_p3 + 2'd1);

assign wkern_mid2_fu_746_p3 = ((exitcond_mid_fu_720_p2[0:0] === 1'b1) ? wkern_1_fu_726_p2 : wkern_mid_fu_706_p3);

assign wkern_mid_fu_706_p3 = ((ap_phi_mux_exitcond_flatten3_phi_fu_431_p4[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wkern_phi_fu_465_p4);

assign wout_1_fu_845_p2 = (wout_mid_reg_910 + 5'd1);

assign wout_mid_fu_561_p3 = ((exitcond1_reg_253[0:0] === 1'b1) ? 5'd0 : wout_reg_288);

always @ (posedge ap_clk) begin
    tmp_4_cast_reg_894[15:5] <= 11'b00000000000;
    tmp_23_cast_reg_939[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //line_buffer_19
