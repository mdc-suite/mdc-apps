-- -------------------------------------------------------------------------------
-- This file has been automatically generated by the Caph compiler (version 2.8.4d)
-- from file main.cph, on 2019-05-08 at 15:51:51, by <unknown>
-- For more information, see : http://caph.univ-bpclermont.fr
-- -------------------------------------------------------------------------------

library ieee,caph,work;
use ieee.std_logic_1164.all;
use caph.core.all;
use caph.data_types.all;
use ieee.numeric_std.all;
use work.all;
use work.extfns.all;
use work.edgeDetectionTutorial_globals.all;

entity Delay is
   port (
    dataIn_empty: in std_logic;
    dataIn: in std_logic_vector(8 downto 0);
    dataIn_rd: out std_logic;
    dataOut_full: in std_logic;
    dataOut: out std_logic_vector(8 downto 0);
    dataOut_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end Delay;

architecture FSM of Delay is
    signal dataReg : unsigned(8 downto 0);
    signal n_dataReg : unsigned(8 downto 0);
    signal en_dataReg : boolean;
begin
  comb: process(dataIn, dataIn_empty, dataOut_full, dataReg)
    variable p_pel : unsigned(8 downto 0);
  begin
    -- dataIn.rdy, dataOut.rdy / p_pel=dataIn, wr(dataOut,dataReg), dataReg:=p_pel
    if dataIn_empty='0' and dataOut_full='0' then
      p_pel := from_std_logic_vector(dataIn,9);
      dataIn_rd <= '1';
      dataOut <= std_logic_vector(dataReg);
      dataOut_wr <= '1';
      n_dataReg <= p_pel;
      en_dataReg <= true;
    else
      dataIn_rd <= '0';
      dataOut_wr <= '0';
      dataOut <= (others => 'X');
      en_dataReg <= false;
      n_dataReg <= dataReg;
    end if;
  end process;
  seq: process(clock, reset)
  begin
    if (reset='0') then
      dataReg <= "000000000";
    elsif rising_edge(clock) then
      if ( en_dataReg ) then
        dataReg <= n_dataReg after 1 ns;
      end if;
    end if;
  end process;
end FSM;
