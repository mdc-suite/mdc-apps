-- -------------------------------------------------------------------------------
-- This file has been automatically generated by the Caph compiler (version 2.8.4d)
-- from file main.cph, on 2019-05-08 at 15:51:51, by <unknown>
-- For more information, see : http://caph.univ-bpclermont.fr
-- -------------------------------------------------------------------------------

library ieee,caph,work;
use ieee.std_logic_1164.all;
use caph.core.all;
use caph.data_types.all;
use ieee.numeric_std.all;
use work.all;
use work.extfns.all;
use work.edgeDetectionTutorial_globals.all;

entity Sqrt is
   port (
    inY_empty: in std_logic;
    inY: in std_logic_vector(31 downto 0);
    inY_rd: out std_logic;
    sqrtY_full: in std_logic;
    sqrtY: out std_logic_vector(7 downto 0);
    sqrtY_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end Sqrt;

architecture FSM of Sqrt is
begin
  comb: process(inY, inY_empty, sqrtY_full)
    variable p_din : unsigned(31 downto 0);
  begin
    -- inY.rdy, sqrtY.rdy / p_din=inY, wr(sqrtY,sqrt_fctn(p_din))
    if inY_empty='0' and sqrtY_full='0' then
      p_din := from_std_logic_vector(inY,32);
      inY_rd <= '1';
      sqrtY <= std_logic_vector(sqrt_fctn(p_din));
      sqrtY_wr <= '1';
    else
      inY_rd <= '0';
      sqrtY_wr <= '0';
      sqrtY <= (others => 'X');
    end if;
  end process;
  seq: process(clock, reset)
  begin
    if (reset='0') then
    elsif rising_edge(clock) then
    end if;
  end process;
end FSM;
