// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) 
module rom #(
	mem_size = 64,
	data_width = 16,
	mem_file = "./filename.mem"
)(
addr, ce, q, clk);


input[$clog2(mem_size)-1:0] addr;   //addr_width = $clog2(mem_size
input ce;
output reg[data_width-1:0] q;
input clk;

(* ram_style = "distributed" *)reg [data_width-1:0] ram[0:mem_size-1];

initial begin
    $readmemh(mem_file, ram);
end



always @(posedge clk)  
begin 
    if (ce) 
    begin
        q <= ram[addr];
    end
end

endmodule



