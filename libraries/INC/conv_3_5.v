// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_3_5,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.223500,HLS_SYN_LAT=46497792,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=1,HLS_SYN_FF=123,HLS_SYN_LUT=856}" *)

module conv_3_5 (
        ap_clk,
        ap_rst,
        input_1_V_V_dout,
        input_1_V_V_empty_n,
        input_1_V_V_read,
        input_2_V_V_dout,
        input_2_V_V_empty_n,
        input_2_V_V_read,
        output_1_V_V_din,
        output_1_V_V_full_n,
        output_1_V_V_write,
        output_2_V_V_din,
        output_2_V_V_full_n,
        output_2_V_V_write,
        weight_1_V_V_dout,
        weight_1_V_V_empty_n,
        weight_1_V_V_read,
        weight_2_V_V_dout,
        weight_2_V_V_empty_n,
        weight_2_V_V_read,
        bias_1_V_V_dout,
        bias_1_V_V_empty_n,
        bias_1_V_V_read,
        bias_2_V_V_dout,
        bias_2_V_V_empty_n,
        bias_2_V_V_read
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_pp0_stage0 = 8'd16;
parameter    ap_ST_fsm_state7 = 8'd32;
parameter    ap_ST_fsm_state8 = 8'd64;
parameter    ap_ST_fsm_state9 = 8'd128;

input   ap_clk;
input   ap_rst;
input  [15:0] input_1_V_V_dout;
input   input_1_V_V_empty_n;
output   input_1_V_V_read;
input  [15:0] input_2_V_V_dout;
input   input_2_V_V_empty_n;
output   input_2_V_V_read;
output  [15:0] output_1_V_V_din;
input   output_1_V_V_full_n;
output   output_1_V_V_write;
output  [15:0] output_2_V_V_din;
input   output_2_V_V_full_n;
output   output_2_V_V_write;
input  [7:0] weight_1_V_V_dout;
input   weight_1_V_V_empty_n;
output   weight_1_V_V_read;
input  [7:0] weight_2_V_V_dout;
input   weight_2_V_V_empty_n;
output   weight_2_V_V_read;
input  [7:0] bias_1_V_V_dout;
input   bias_1_V_V_empty_n;
output   bias_1_V_V_read;
input  [7:0] bias_2_V_V_dout;
input   bias_2_V_V_empty_n;
output   bias_2_V_V_read;

reg input_1_V_V_read;
reg input_2_V_V_read;
reg output_1_V_V_write;
reg output_2_V_V_write;
reg weight_1_V_V_read;
reg weight_2_V_V_read;
reg bias_1_V_V_read;
reg bias_2_V_V_read;

reg    input_1_V_V_blk_n;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state4;
reg   [0:0] tmp_reg_830;
reg    input_2_V_V_blk_n;
reg    output_1_V_V_blk_n;
wire    ap_CS_fsm_state9;
reg    output_2_V_V_blk_n;
reg    weight_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    weight_2_V_V_blk_n;
reg    bias_1_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond4_fu_489_p2;
reg    bias_2_V_V_blk_n;
reg   [3:0] pout_reg_420;
wire   [1:0] branch_mid2_fu_469_p3;
reg   [1:0] branch_mid2_reg_825;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_477_p2;
wire   [14:0] indvar_flatten_next1_fu_483_p2;
reg   [14:0] indvar_flatten_next1_reg_834;
wire   [4:0] init_idx_1_fu_495_p2;
reg    ap_predicate_op51_read_state3;
reg    ap_predicate_op58_read_state3;
reg    ap_block_state3;
wire   [6:0] indvar_flatten_next2_fu_537_p2;
reg   [6:0] indvar_flatten_next2_reg_847;
reg    ap_block_state4;
wire   [3:0] pout_1_fu_543_p2;
reg   [3:0] pout_1_reg_852;
reg    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] out_val_V_addr_3_reg_867;
wire   [0:0] exitcond8_fu_554_p2;
reg   [0:0] exitcond8_reg_873;
wire   [4:0] wr_idx_1_fu_769_p2;
reg   [4:0] wr_idx_1_reg_883;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond_fu_763_p2;
wire   [1:0] branch_1_fu_780_p2;
wire   [9:0] indvar_flatten_next_fu_791_p3;
wire   [0:0] exitcond3_fu_799_p2;
wire   [0:0] exitcond_flatten_fu_805_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg   [3:0] out_val_V_address0;
reg    out_val_V_ce0;
reg    out_val_V_we0;
reg   [15:0] out_val_V_d0;
wire   [15:0] out_val_V_q0;
reg   [3:0] out_val_V_address1;
reg    out_val_V_ce1;
reg    out_val_V_we1;
wire   [15:0] out_val_V_d1;
wire   [15:0] out_val_V_q1;
reg   [0:0] exitcond_flatten3_reg_327;
wire    ap_CS_fsm_state1;
wire   [0:0] exitcond_flatten1_fu_811_p2;
reg   [0:0] exitcond1_reg_339;
reg   [1:0] branch_reg_350;
reg   [9:0] indvar_flatten_reg_361;
reg   [14:0] indvar_flatten1_reg_373;
reg   [4:0] init_idx_reg_385;
reg   [6:0] indvar_flatten2_reg_396;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond_flatten2_fu_757_p2;
reg  signed [15:0] p_s_reg_408;
reg   [3:0] ap_phi_mux_pout_phi_fu_424_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_p_1_reg_431;
reg  signed [7:0] ap_phi_reg_pp0_iter1_p_1_reg_431;
reg   [4:0] wr_idx_reg_440;
reg    ap_block_state9;
wire   [63:0] tmp_6_fu_501_p1;
wire   [63:0] tmp_2_fu_519_p1;
wire   [63:0] tmp_5_fu_549_p1;
wire   [63:0] tmp_s_fu_775_p1;
wire  signed [15:0] tmp_8_cast_fu_514_p1;
wire  signed [15:0] tmp_4_cast_fu_532_p1;
wire   [0:0] not_exitcond_flatten_fu_451_p2;
wire   [0:0] exitcond3_mid_fu_457_p2;
wire   [0:0] tmp_1_fu_463_p2;
wire   [8:0] tmp_8_fu_506_p3;
wire   [8:0] tmp_4_fu_524_p3;
wire   [22:0] tmp_7_fu_568_p3;
wire  signed [23:0] tmp_10_cast_fu_576_p1;
wire  signed [23:0] p_Val2_3_fu_817_p2;
(* use_dsp48 = "no" *) wire   [23:0] p_Val2_4_fu_580_p2;
wire   [0:0] tmp_13_fu_603_p3;
wire   [15:0] p_Val2_5_fu_593_p4;
wire   [15:0] tmp_9_fu_610_p1;
wire   [15:0] p_Val2_6_fu_622_p2;
wire   [0:0] newsignbit_fu_628_p3;
wire   [0:0] tmp_14_fu_614_p3;
wire   [0:0] tmp_10_fu_636_p2;
wire   [0:0] p_Result_2_not_fu_648_p2;
wire   [0:0] signbit_fu_585_p3;
wire   [0:0] not_carry_fu_654_p2;
wire   [0:0] carry_fu_642_p2;
wire   [0:0] deleted_zeros_fu_660_p2;
wire   [0:0] p_not_i_i_fu_678_p2;
wire   [0:0] brmerge_i_i_fu_684_p2;
wire   [0:0] tmp_11_fu_666_p2;
wire   [0:0] p_38_i_i_fu_672_p2;
wire   [0:0] brmerge40_demorgan_i_fu_696_p2;
wire   [0:0] tmp1_demorgan_fu_702_p2;
wire   [0:0] underflow_fu_708_p2;
wire   [0:0] overflow_fu_690_p2;
wire   [0:0] tmp2_fu_720_p2;
wire   [0:0] brmerge_i_i_i_fu_714_p2;
wire   [0:0] underflow_not_fu_726_p2;
wire   [15:0] p_Val2_6_mux_fu_732_p3;
wire   [15:0] p_Val2_6_7_fu_740_p3;
wire   [9:0] indvar_flatten18_op_fu_785_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_153;
reg    ap_condition_139;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_3_5_out_val_V #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
out_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_val_V_address0),
    .ce0(out_val_V_ce0),
    .we0(out_val_V_we0),
    .d0(out_val_V_d0),
    .q0(out_val_V_q0),
    .address1(out_val_V_address1),
    .ce1(out_val_V_ce1),
    .we1(out_val_V_we1),
    .d1(out_val_V_d1),
    .q1(out_val_V_q1)
);

conv_3_5_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
conv_3_5_mul_mul_bkb_U1(
    .din0(p_s_reg_408),
    .din1(ap_phi_reg_pp0_iter1_p_1_reg_431),
    .dout(p_Val2_3_fu_817_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond8_fu_554_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_153)) begin
        if ((tmp_reg_830 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_p_1_reg_431 <= weight_2_V_V_dout;
        end else if ((tmp_reg_830 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_1_reg_431 <= weight_1_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_1_reg_431 <= ap_phi_reg_pp0_iter0_p_1_reg_431;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        branch_reg_350 <= branch_1_fu_780_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        branch_reg_350 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        exitcond1_reg_339 <= exitcond3_fu_799_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        exitcond1_reg_339 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        exitcond_flatten3_reg_327 <= exitcond_flatten_fu_805_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        exitcond_flatten3_reg_327 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten1_reg_373 <= indvar_flatten_next1_reg_834;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten1_reg_373 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (exitcond4_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten2_reg_396 <= 7'd0;
    end else if (((exitcond_flatten2_fu_757_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten2_reg_396 <= indvar_flatten_next2_reg_847;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_361 <= indvar_flatten_next_fu_791_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_361 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        init_idx_reg_385 <= 5'd0;
    end else if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (exitcond4_fu_489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        init_idx_reg_385 <= init_idx_1_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_139)) begin
        if ((tmp_reg_830 == 1'd0)) begin
            p_s_reg_408 <= input_2_V_V_dout;
        end else if ((tmp_reg_830 == 1'd1)) begin
            p_s_reg_408 <= input_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_873 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pout_reg_420 <= pout_1_reg_852;
    end else if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
        pout_reg_420 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        wr_idx_reg_440 <= 5'd0;
    end else if ((~(((tmp_reg_830 == 1'd0) & (output_2_V_V_full_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (output_1_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9))) begin
        wr_idx_reg_440 <= wr_idx_1_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        branch_mid2_reg_825 <= branch_mid2_fu_469_p3;
        indvar_flatten_next1_reg_834 <= indvar_flatten_next1_fu_483_p2;
        tmp_reg_830 <= tmp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond8_reg_873 <= exitcond8_fu_554_p2;
        out_val_V_addr_3_reg_867 <= tmp_5_fu_549_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
        indvar_flatten_next2_reg_847 <= indvar_flatten_next2_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pout_1_reg_852 <= pout_1_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        wr_idx_1_reg_883 <= wr_idx_1_fu_769_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond8_reg_873 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_pout_phi_fu_424_p4 = pout_1_reg_852;
    end else begin
        ap_phi_mux_pout_phi_fu_424_p4 = pout_reg_420;
    end
end

always @ (*) begin
    if (((exitcond4_fu_489_p2 == 1'd0) & (tmp_reg_830 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        bias_1_V_V_blk_n = bias_1_V_V_empty_n;
    end else begin
        bias_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        bias_1_V_V_read = 1'b1;
    end else begin
        bias_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_489_p2 == 1'd0) & (tmp_reg_830 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        bias_2_V_V_blk_n = bias_2_V_V_empty_n;
    end else begin
        bias_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op51_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        bias_2_V_V_read = 1'b1;
    end else begin
        bias_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        input_1_V_V_blk_n = input_1_V_V_empty_n;
    end else begin
        input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (tmp_reg_830 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        input_1_V_V_read = 1'b1;
    end else begin
        input_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        input_2_V_V_blk_n = input_2_V_V_empty_n;
    end else begin
        input_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (tmp_reg_830 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        input_2_V_V_read = 1'b1;
    end else begin
        input_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_val_V_address0 = tmp_5_fu_549_p1;
    end else if (((ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        out_val_V_address0 = tmp_2_fu_519_p1;
    end else if (((ap_predicate_op51_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        out_val_V_address0 = tmp_6_fu_501_p1;
    end else begin
        out_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_val_V_address1 = tmp_s_fu_775_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        out_val_V_address1 = out_val_V_addr_3_reg_867;
    end else begin
        out_val_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op51_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        out_val_V_ce0 = 1'b1;
    end else begin
        out_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        out_val_V_ce1 = 1'b1;
    end else begin
        out_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((ap_predicate_op58_read_state3 == 1'b1)) begin
            out_val_V_d0 = tmp_4_cast_fu_532_p1;
        end else if ((ap_predicate_op51_read_state3 == 1'b1)) begin
            out_val_V_d0 = tmp_8_cast_fu_514_p1;
        end else begin
            out_val_V_d0 = 'bx;
        end
    end else begin
        out_val_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (ap_predicate_op51_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        out_val_V_we0 = 1'b1;
    end else begin
        out_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_val_V_we1 = 1'b1;
    end else begin
        out_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        output_1_V_V_blk_n = output_1_V_V_full_n;
    end else begin
        output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((tmp_reg_830 == 1'd0) & (output_2_V_V_full_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (output_1_V_V_full_n == 1'b0))) & (tmp_reg_830 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        output_1_V_V_write = 1'b1;
    end else begin
        output_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        output_2_V_V_blk_n = output_2_V_V_full_n;
    end else begin
        output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((tmp_reg_830 == 1'd0) & (output_2_V_V_full_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (output_1_V_V_full_n == 1'b0))) & (tmp_reg_830 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        output_2_V_V_write = 1'b1;
    end else begin
        output_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_reg_830 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_1_V_V_blk_n = weight_1_V_V_empty_n;
    end else begin
        weight_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_1_V_V_read = 1'b1;
    end else begin
        weight_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_reg_830 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_2_V_V_blk_n = weight_2_V_V_empty_n;
    end else begin
        weight_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_830 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_2_V_V_read = 1'b1;
    end else begin
        weight_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (exitcond4_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0))) & (exitcond4_fu_489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond_flatten2_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond_flatten1_fu_811_p2 == 1'd1) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((exitcond_flatten1_fu_811_p2 == 1'd0) & (exitcond_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~(((tmp_reg_830 == 1'd0) & (output_2_V_V_full_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (output_1_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((tmp_reg_830 == 1'd0) & (weight_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (weight_1_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((tmp_reg_830 == 1'd0) & (weight_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (weight_1_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state3 = (((ap_predicate_op58_read_state3 == 1'b1) & (bias_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op51_read_state3 == 1'b1) & (bias_2_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = (((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter0 = (((tmp_reg_830 == 1'd0) & (weight_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (weight_1_V_V_empty_n == 1'b0)));
end

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = (((tmp_reg_830 == 1'd0) & (output_2_V_V_full_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (output_1_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_139 = (~(((tmp_reg_830 == 1'd0) & (input_2_V_V_empty_n == 1'b0)) | ((tmp_reg_830 == 1'd1) & (input_1_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4));
end

always @ (*) begin
    ap_condition_153 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_1_reg_431 = 'bx;

always @ (*) begin
    ap_predicate_op51_read_state3 = ((exitcond4_fu_489_p2 == 1'd0) & (tmp_reg_830 == 1'd0));
end

always @ (*) begin
    ap_predicate_op58_read_state3 = ((exitcond4_fu_489_p2 == 1'd0) & (tmp_reg_830 == 1'd1));
end

assign branch_1_fu_780_p2 = (branch_mid2_reg_825 + 2'd1);

assign branch_mid2_fu_469_p3 = ((tmp_1_fu_463_p2[0:0] === 1'b1) ? 2'd0 : branch_reg_350);

assign brmerge40_demorgan_i_fu_696_p2 = (signbit_fu_585_p3 & newsignbit_fu_628_p3);

assign brmerge_i_i_fu_684_p2 = (p_not_i_i_fu_678_p2 | newsignbit_fu_628_p3);

assign brmerge_i_i_i_fu_714_p2 = (underflow_fu_708_p2 | overflow_fu_690_p2);

assign carry_fu_642_p2 = (tmp_14_fu_614_p3 & tmp_10_fu_636_p2);

assign deleted_zeros_fu_660_p2 = (signbit_fu_585_p3 ^ not_carry_fu_654_p2);

assign exitcond3_fu_799_p2 = ((branch_1_fu_780_p2 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond3_mid_fu_457_p2 = (not_exitcond_flatten_fu_451_p2 & exitcond1_reg_339);

assign exitcond4_fu_489_p2 = ((init_idx_reg_385 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond8_fu_554_p2 = ((ap_phi_mux_pout_phi_fu_424_p4 == 4'd15) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_811_p2 = ((indvar_flatten1_reg_373 == 15'd32767) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_757_p2 = ((indvar_flatten2_reg_396 == 7'd71) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_805_p2 = ((indvar_flatten_next_fu_791_p3 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_fu_763_p2 = ((wr_idx_reg_440 == 5'd16) ? 1'b1 : 1'b0);

assign indvar_flatten18_op_fu_785_p2 = (indvar_flatten_reg_361 + 10'd1);

assign indvar_flatten_next1_fu_483_p2 = (indvar_flatten1_reg_373 + 15'd1);

assign indvar_flatten_next2_fu_537_p2 = (indvar_flatten2_reg_396 + 7'd1);

assign indvar_flatten_next_fu_791_p3 = ((exitcond_flatten3_reg_327[0:0] === 1'b1) ? 10'd1 : indvar_flatten18_op_fu_785_p2);

assign init_idx_1_fu_495_p2 = (init_idx_reg_385 + 5'd1);

assign newsignbit_fu_628_p3 = p_Val2_6_fu_622_p2[32'd15];

assign not_carry_fu_654_p2 = (p_Result_2_not_fu_648_p2 | newsignbit_fu_628_p3);

assign not_exitcond_flatten_fu_451_p2 = (exitcond_flatten3_reg_327 ^ 1'd1);

assign out_val_V_d1 = ((underflow_not_fu_726_p2[0:0] === 1'b1) ? p_Val2_6_mux_fu_732_p3 : p_Val2_6_7_fu_740_p3);

assign output_1_V_V_din = out_val_V_q1;

assign output_2_V_V_din = out_val_V_q1;

assign overflow_fu_690_p2 = (tmp_11_fu_666_p2 & brmerge_i_i_fu_684_p2);

assign p_38_i_i_fu_672_p2 = (signbit_fu_585_p3 & carry_fu_642_p2);

assign p_Result_2_not_fu_648_p2 = (tmp_14_fu_614_p3 ^ 1'd1);

assign p_Val2_4_fu_580_p2 = ($signed(tmp_10_cast_fu_576_p1) + $signed(p_Val2_3_fu_817_p2));

assign p_Val2_5_fu_593_p4 = {{p_Val2_4_fu_580_p2[22:7]}};

assign p_Val2_6_7_fu_740_p3 = ((underflow_fu_708_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_6_fu_622_p2);

assign p_Val2_6_fu_622_p2 = (p_Val2_5_fu_593_p4 + tmp_9_fu_610_p1);

assign p_Val2_6_mux_fu_732_p3 = ((brmerge_i_i_i_fu_714_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_6_fu_622_p2);

assign p_not_i_i_fu_678_p2 = (deleted_zeros_fu_660_p2 ^ 1'd1);

assign pout_1_fu_543_p2 = (ap_phi_mux_pout_phi_fu_424_p4 + 4'd1);

assign signbit_fu_585_p3 = p_Val2_4_fu_580_p2[32'd23];

assign tmp1_demorgan_fu_702_p2 = (p_38_i_i_fu_672_p2 | brmerge40_demorgan_i_fu_696_p2);

assign tmp2_fu_720_p2 = (tmp_11_fu_666_p2 | newsignbit_fu_628_p3);

assign tmp_10_cast_fu_576_p1 = $signed(tmp_7_fu_568_p3);

assign tmp_10_fu_636_p2 = (newsignbit_fu_628_p3 ^ 1'd1);

assign tmp_11_fu_666_p2 = (signbit_fu_585_p3 ^ 1'd1);

assign tmp_13_fu_603_p3 = p_Val2_3_fu_817_p2[32'd6];

assign tmp_14_fu_614_p3 = p_Val2_4_fu_580_p2[32'd22];

assign tmp_1_fu_463_p2 = (exitcond_flatten3_reg_327 | exitcond3_mid_fu_457_p2);

assign tmp_2_fu_519_p1 = init_idx_reg_385;

assign tmp_4_cast_fu_532_p1 = $signed(tmp_4_fu_524_p3);

assign tmp_4_fu_524_p3 = {{bias_1_V_V_dout}, {1'd0}};

assign tmp_5_fu_549_p1 = ap_phi_mux_pout_phi_fu_424_p4;

assign tmp_6_fu_501_p1 = init_idx_reg_385;

assign tmp_7_fu_568_p3 = {{out_val_V_q0}, {7'd0}};

assign tmp_8_cast_fu_514_p1 = $signed(tmp_8_fu_506_p3);

assign tmp_8_fu_506_p3 = {{bias_2_V_V_dout}, {1'd0}};

assign tmp_9_fu_610_p1 = tmp_13_fu_603_p3;

assign tmp_fu_477_p2 = ((branch_mid2_fu_469_p3 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_775_p1 = wr_idx_reg_440;

assign underflow_fu_708_p2 = (tmp1_demorgan_fu_702_p2 ^ signbit_fu_585_p3);

assign underflow_not_fu_726_p2 = (tmp2_fu_720_p2 | p_38_i_i_fu_672_p2);

assign wr_idx_1_fu_769_p2 = (wr_idx_reg_440 + 5'd1);

endmodule //conv_3_5
